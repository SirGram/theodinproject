/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const data = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\nconst priorityColors = {\r\n  low: \"lightgreen\",\r\n  med: \"gold\",\r\n  high: \"tomato\",\r\n};\r\nclass Task {\r\n  constructor(title, description, dueDate, priority, project, star, done) {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.project = project;\r\n    this.star = star;\r\n    this.done = done;\r\n  }\r\n}\r\n\r\nconst DOM = () => {\r\n  let tasksContainer;\r\n  let taskContainer;\r\n  let projectContainer;\r\n  function displayHome() {\r\n    document.body.innerHTML = \"\";\r\n    const header = document.createElement(\"header\");\r\n    const title = document.createElement(\"h1\");\r\n    title.textContent = \"TODO Manager\";\r\n    header.appendChild(title);\r\n    const main = document.createElement(\"main\");\r\n    //left menu\r\n    const leftNav = document.createElement(\"section\");\r\n    leftNav.classList = \"left-nav\";\r\n\r\n    const filters = document.createElement(\"div\");\r\n    filters.classList = \"filters\";\r\n    const projects = document.createElement(\"div\");\r\n    projects.classList = \"projects\";\r\n\r\n    const leftNavtitle1 = document.createElement(\"h3\");\r\n    leftNavtitle1.textContent = \"Filters\";\r\n    const leftNavtitle2 = document.createElement(\"h3\");\r\n    leftNavtitle2.textContent = \"Projects\";\r\n    const todayButton = document.createElement(\"button\");\r\n    todayButton.textContent = \"Today\";\r\n\r\n    const weekButton = document.createElement(\"button\");\r\n    weekButton.textContent = \"This Week\";\r\n    const priorityButtons = document.createElement(\"div\");\r\n    priorityButtons.classList = \"priority-buttons\";\r\n    const lowprioButton = document.createElement(\"button\");\r\n    const medprioButton = document.createElement(\"button\");\r\n    const highprioButton = document.createElement(\"button\");\r\n    lowprioButton.style.backgroundColor = priorityColors[\"low\"];\r\n    medprioButton.style.backgroundColor = priorityColors[\"med\"];\r\n    highprioButton.style.backgroundColor = priorityColors[\"high\"];\r\n    priorityButtons.appendChild(lowprioButton);\r\n    priorityButtons.appendChild(medprioButton);\r\n    priorityButtons.appendChild(highprioButton);\r\n    const starredButton = document.createElement(\"button\");\r\n    starredButton.innerHTML = '<i class=\"fas fa-star\"></i>';\r\n    const finishedButton = document.createElement(\"button\");\r\n    finishedButton.innerHTML = '<i class=\"fas fa-check\"></i>';\r\n    projectContainer = document.createElement(\"div\");\r\n    projectContainer.classList = \"project-container\";\r\n\r\n    filters.appendChild(leftNavtitle1);\r\n    filters.appendChild(todayButton);\r\n    filters.appendChild(weekButton);\r\n    filters.appendChild(starredButton);\r\n    filters.appendChild(finishedButton);\r\n    filters.appendChild(priorityButtons);\r\n    projects.appendChild(leftNavtitle2);\r\n\r\n    projects.appendChild(projectContainer);\r\n    leftNav.appendChild(filters);\r\n    leftNav.appendChild(projects);\r\n    //task menu\r\n    tasksContainer = document.createElement(\"section\");\r\n    tasksContainer.classList = \"tasks-container\";\r\n    const tasksContainerHeader = document.createElement(\"div\");\r\n    const tasksContainerHeaderTitle = document.createElement(\"h1\");\r\n    tasksContainerHeaderTitle.textContent = \"Tasks\";\r\n    const addTaskButton = document.createElement(\"button\");\r\n    addTaskButton.textContent = \"+\";\r\n    const selectionOrder = document.createElement(\"select\");\r\n    selectionOrder.id = \"sortOrder\";\r\n    const optionAsc = document.createElement(\"option\");\r\n    optionAsc.value = \"asc\";\r\n    optionAsc.textContent = \"Date Asc\";\r\n    const optionDesc = document.createElement(\"option\");\r\n    optionDesc.value = \"desc\";\r\n    optionDesc.textContent = \"Date Desc\";\r\n\r\n    tasksContainerHeader.appendChild(addTaskButton);\r\n    tasksContainerHeader.appendChild(tasksContainerHeaderTitle);\r\n    tasksContainerHeader.appendChild(selectionOrder);\r\n    selectionOrder.appendChild(optionDesc);\r\n    selectionOrder.appendChild(optionAsc);\r\n    tasksContainerHeader.classList = \"task-container-header\";\r\n    taskContainer = document.createElement(\"div\");\r\n    taskContainer.classList = \"task-container\";\r\n    tasksContainer.appendChild(tasksContainerHeader);\r\n    tasksContainer.appendChild(taskContainer);\r\n    main.appendChild(leftNav);\r\n    main.appendChild(tasksContainer);\r\n\r\n    const footer = document.createElement(\"footer\");\r\n    footer.innerHTML = `<p>\r\n    \r\n    <a href=\"https://github.com/SirGram\" target=\"_blank\">SirGram</a> 2024\r\n  </p>`;\r\n\r\n    document.body.appendChild(header);\r\n    document.body.appendChild(main);\r\n    document.body.appendChild(footer);\r\n    return {\r\n      addTaskButton,\r\n      todayButton,\r\n      starredButton,\r\n      weekButton,\r\n      lowprioButton,\r\n      medprioButton,\r\n      highprioButton,\r\n      finishedButton,\r\n      selectionOrder,\r\n    };\r\n  }\r\n  function displayTasks(taskList) {\r\n    let starButtons = [];\r\n    let editButtons = [];\r\n    let deleteButtons = [];\r\n    let doneButtons = [];\r\n    let moreinfoButtons = [];\r\n    let moreinfoDivs = [];\r\n\r\n    taskContainer.innerHTML = \"\";\r\n    taskList.forEach((task) => {\r\n      const taskDivContainer = document.createElement(\"div\");\r\n      taskDivContainer.classList = \"task-and-buttons\";\r\n      const taskDiv = document.createElement(\"div\");\r\n      taskDiv.classList = \"main-info\";\r\n\r\n      const starButton = document.createElement(\"button\");\r\n      starButton.classList = \"star-button\";\r\n      if (task.star) {\r\n        starButton.classList.add(\"checked\");\r\n      } else {\r\n        starButton.classList.remove(\"checked\");\r\n      }\r\n      starButton.innerHTML = '<i class=\"fas fa-star\"></i>';\r\n\r\n      const moreinfoButton = document.createElement(\"button\");\r\n      moreinfoButton.classList = \"more-button\";\r\n      moreinfoButton.innerHTML = '<i class=\"fas fa-arrow-right\"></i>';\r\n\r\n      const moreinfoDiv = document.createElement(\"div\");\r\n      moreinfoDiv.classList = \"task-description\";\r\n      const moreinfoDivLeft = document.createElement(\"div\");\r\n      const moreinfoDivRight = document.createElement(\"div\");\r\n\r\n      moreinfoDivRight.classList = \"edit-delete\";\r\n      moreinfoDivLeft.innerHTML = `\r\n      <p><b>Due Date: </b>${task.dueDate}</p><p><b>Description: </b>${task.description}</p>\r\n      <p><b>Project: </b>${task.project}</p>`;\r\n\r\n      const taskSubDiv1 = document.createElement(\"p\");\r\n      taskSubDiv1.classList = \"task-title\";\r\n      taskSubDiv1.innerHTML = ` ${task.title} `;\r\n\r\n      const editButton = document.createElement(\"button\");\r\n      editButton.classList = \"edit-button\";\r\n      editButton.innerHTML = '<i class=\"fas fa-edit\"></i>';\r\n      if (task.done) {\r\n        taskSubDiv1.classList.add(\"crossed\");\r\n      } else {\r\n        taskSubDiv1.classList.remove(\"crossed\");\r\n\r\n        taskDiv.style.backgroundColor =\r\n          priorityColors[task.priority.toLowerCase()];\r\n      }\r\n\r\n      const deleteButton = document.createElement(\"button\");\r\n      deleteButton.classList = \"delete-button\";\r\n      deleteButton.innerHTML = '<i class=\"fas fa-trash-alt\"></i>';\r\n\r\n      const taskLeftDiv = document.createElement(\"div\");\r\n      taskLeftDiv.classList = \"task-left\";\r\n      taskLeftDiv.appendChild(moreinfoButton);\r\n      taskLeftDiv.appendChild(taskSubDiv1);\r\n\r\n      const taskRightDiv = document.createElement(\"div\");\r\n      taskRightDiv.classList = \"task-right\";\r\n      taskRightDiv.appendChild(starButton);\r\n      moreinfoDivRight.appendChild(editButton);\r\n      moreinfoDivRight.appendChild(deleteButton);\r\n      moreinfoDiv.appendChild(moreinfoDivLeft);\r\n      moreinfoDiv.appendChild(moreinfoDivRight);\r\n\r\n      taskDiv.appendChild(taskLeftDiv);\r\n      taskDiv.appendChild(taskRightDiv);\r\n\r\n      taskDivContainer.appendChild(taskDiv);\r\n      taskDivContainer.appendChild(moreinfoDiv);\r\n      taskContainer.appendChild(taskDivContainer);\r\n\r\n      starButtons.push(starButton);\r\n      editButtons.push(editButton);\r\n      deleteButtons.push(deleteButton);\r\n      doneButtons.push(taskSubDiv1);\r\n      moreinfoButtons.push(moreinfoButton);\r\n      moreinfoDivs.push(moreinfoDiv);\r\n    });\r\n\r\n    return {\r\n      starButtons,\r\n      editButtons,\r\n      deleteButtons,\r\n      doneButtons,\r\n      moreinfoButtons,\r\n      moreinfoDivs,\r\n    };\r\n  }\r\n  function displayProjects(projectList) {\r\n    let projectButtons = [];\r\n    projectContainer.innerHTML = \"\";\r\n    projectList.forEach((project) => {\r\n      const projectButton = document.createElement(\"button\");\r\n      projectButton.textContent = project;\r\n      projectContainer.appendChild(projectButton);\r\n      projectButtons.push(projectButton);\r\n    });\r\n    return projectButtons;\r\n  }\r\n  function displayAddTask(editMode, tasks, index) {\r\n    const addTaskMenu = document.createElement(\"div\");\r\n    addTaskMenu.classList.add(\"add-task-menu\");\r\n    addTaskMenu.classList.add(\"visible\");\r\n\r\n    const addTaskMenuTop = document.createElement(\"div\");\r\n    addTaskMenuTop.classList.add(\"add-task-menu-top\");\r\n    const addTaskMenuLeft = document.createElement(\"div\");\r\n\r\n    addTaskMenuLeft.classList.add(\"add-task-menu-left\");\r\n    const addTaskMenuRight = document.createElement(\"div\");\r\n\r\n    addTaskMenuRight.classList.add(\"add-task-menu-right\");\r\n    const titleHeading = document.createElement(\"h1\");\r\n    titleHeading.textContent = \"Add new task\";\r\n    addTaskMenu.appendChild(titleHeading);\r\n\r\n    const titleText = document.createElement(\"h4\");\r\n    titleText.textContent = \"Title\";\r\n    const descriptionText = document.createElement(\"h4\");\r\n    descriptionText.textContent = \"Description\";\r\n    const dateText = document.createElement(\"h4\");\r\n    dateText.textContent = \"Date\";\r\n    const projectText = document.createElement(\"h4\");\r\n    projectText.textContent = \"Project\";\r\n    const priorityText = document.createElement(\"h4\");\r\n    priorityText.textContent = \"Priority\";\r\n\r\n    const titleInput = document.createElement(\"input\");\r\n    titleInput.setAttribute(\"type\", \"text\");\r\n    titleInput.setAttribute(\"placeholder\", \"Task Title\");\r\n\r\n    addTaskMenuLeft.appendChild(titleText);\r\n    addTaskMenuLeft.appendChild(titleInput);\r\n\r\n    const descriptionInput = document.createElement(\"textarea\");\r\n    descriptionInput.setAttribute(\"type\", \"text\");\r\n    descriptionInput.setAttribute(\"placeholder\", \"Task Description\");\r\n\r\n    addTaskMenuLeft.appendChild(descriptionText);\r\n    addTaskMenuLeft.appendChild(descriptionInput);\r\n\r\n    const dateInput = document.createElement(\"input\");\r\n    dateInput.setAttribute(\"type\", \"date\");\r\n\r\n    addTaskMenuRight.appendChild(dateText);\r\n    addTaskMenuRight.appendChild(dateInput);\r\n\r\n    const projectInput = document.createElement(\"input\");\r\n    projectInput.setAttribute(\"type\", \"text\");\r\n    projectInput.setAttribute(\"placeholder\", \"Task Project\");\r\n\r\n    addTaskMenuRight.appendChild(projectText);\r\n    addTaskMenuRight.appendChild(projectInput);\r\n\r\n    const priorityInput = document.createElement(\"select\");\r\n    const priorityOptions = [\"Low\", \"med\", \"High\"];\r\n    priorityOptions.forEach((option) => {\r\n      const optionElement = document.createElement(\"option\");\r\n      optionElement.value = option;\r\n      optionElement.text = option;\r\n      priorityInput.appendChild(optionElement);\r\n    });\r\n\r\n    addTaskMenuRight.appendChild(priorityText);\r\n    addTaskMenuRight.appendChild(priorityInput);\r\n\r\n    const addTaskMenuButtons = document.createElement(\"div\");\r\n    addTaskMenuButtons.classList = \"add-task-buttons\";\r\n    const createButton = document.createElement(\"button\");\r\n    createButton.textContent = \"Create\";\r\n\r\n    const returnButton = document.createElement(\"button\");\r\n    returnButton.textContent = \"Return\";\r\n    addTaskMenuButtons.appendChild(returnButton);\r\n    addTaskMenuButtons.appendChild(createButton);\r\n\r\n    addTaskMenuTop.appendChild(addTaskMenuLeft);\r\n    addTaskMenuTop.appendChild(addTaskMenuRight);\r\n    addTaskMenu.appendChild(addTaskMenuTop);\r\n    addTaskMenu.appendChild(addTaskMenuButtons);\r\n\r\n    document.body.appendChild(addTaskMenu);\r\n    //Edit task\r\n    if (editMode) {\r\n      titleHeading.textContent = \"Edit task\";\r\n      createButton.textContent = \"Change\";\r\n      console.log(tasks[index]);\r\n      titleInput.value = tasks[index].title;\r\n      descriptionInput.value = tasks[index].description;\r\n      dateInput.value = tasks[index].dueDate;\r\n      projectInput.value = tasks[index].project;\r\n      priorityInput.value = tasks[index].priority;\r\n    }\r\n    return {\r\n      createButton,\r\n      returnButton,\r\n      titleInput,\r\n      descriptionInput,\r\n      dateInput,\r\n      projectInput,\r\n      priorityInput,\r\n    };\r\n  }\r\n  function removeAddTask() {\r\n    const addTaskMenu = document.querySelector(\".add-task-menu\");\r\n    document.body.removeChild(addTaskMenu);\r\n  }\r\n  return {\r\n    displayHome,\r\n    displayTasks,\r\n    displayAddTask,\r\n    removeAddTask,\r\n    displayProjects,\r\n  };\r\n};\r\nconst myDOM = DOM();\r\nlet {\r\n  addTaskButton,\r\n  todayButton,\r\n  starredButton,\r\n  weekButton,\r\n  lowprioButton,\r\n  medprioButton,\r\n  highprioButton,\r\n  finishedButton,\r\n  selectionOrder,\r\n} = myDOM.displayHome();\r\n\r\nlet tasks = [];\r\nif (data) {\r\n  data.forEach((task) => {\r\n    const existingTask = new Task(\r\n      task.title,\r\n      task.description,\r\n      task.dueDate,\r\n      task.priority,\r\n      task.project,\r\n      task.star,\r\n      task.done\r\n    );\r\n    tasks.push(existingTask);\r\n  });\r\n}\r\n\r\nconst saveTasks = () => {\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n};\r\nconst buttonController = (() => {\r\n  let filters = [];\r\n  let projectButtons = [];\r\n  let sortBy;\r\n  function updateProjectButtons() {\r\n    projectButtons = [];\r\n    let projects = [];\r\n    tasks.forEach((task) => {\r\n      if (task.project !== \"\" && !projects.includes(task.project)) {\r\n        projects.push(task.project);\r\n      }\r\n    });\r\n    projectButtons = myDOM.displayProjects(projects);\r\n  }\r\n  updateProjectButtons();\r\n  //filters\r\n  function isFilterActive(name) {\r\n    const existingFilterIndex = filters.findIndex((f) => {\r\n      return f.name === name;\r\n    });\r\n    return existingFilterIndex !== -1;\r\n  }\r\n  function introduceFilter(name, filter) {\r\n    const existingFilterIndex = filters.findIndex((f) => f.name === name);\r\n    if (existingFilterIndex === -1) {\r\n      filters.push({ name, filter });\r\n    } else {\r\n      filters.splice(existingFilterIndex, 1);\r\n    }\r\n    updateTaskButtons();\r\n  }\r\n  function updateListeners() {\r\n    addTaskButton.addEventListener(\"click\", () => {\r\n      updateCreateReturnButtons(false, tasks);\r\n    });\r\n    selectionOrder.addEventListener(\"change\", () => {\r\n      sortBy = selectionOrder.value;\r\n      console.log(sortBy);\r\n      updateTaskButtons();\r\n    });\r\n    todayButton.addEventListener(\"click\", () => {\r\n      const formattedToday = new Date().toISOString().slice(0, 10);\r\n\r\n      const todayFilter = tasks.filter(\r\n        (task) => task.dueDate === formattedToday\r\n      );\r\n      introduceFilter(\"todayFilter\", todayFilter);\r\n      if (isFilterActive(\"todayFilter\")) {\r\n        console.log(\"on\");\r\n        todayButton.style.backgroundColor = \"#2980b9\";\r\n      } else {\r\n        console.log(\"off\");\r\n        todayButton.style.backgroundColor = \"\";\r\n      }\r\n    });\r\n    weekButton.addEventListener(\"click\", () => {\r\n      const today = new Date();\r\n      const startOfWeek = new Date(today);\r\n      startOfWeek.setDate(\r\n        today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1)\r\n      );\r\n      const endOfWeek = new Date(today);\r\n      endOfWeek.setDate(today.getDate() - today.getDay() + 7);\r\n      const weekFilter = tasks.filter((task) => {\r\n        const taskDueDate = new Date(task.dueDate);\r\n        return taskDueDate >= startOfWeek && taskDueDate <= endOfWeek;\r\n      });\r\n      introduceFilter(\"weekFilter\", weekFilter);\r\n      if (isFilterActive(\"weekFilter\")) {\r\n        weekButton.style.backgroundColor = \"#2980b9\";\r\n      } else {\r\n        weekButton.style.backgroundColor = \"\";\r\n      }\r\n    });\r\n    starredButton.addEventListener(\"click\", () => {\r\n      const starFilter = tasks.filter((task) => task.star === true);\r\n      introduceFilter(\"starFilter\", starFilter);\r\n      if (isFilterActive(\"starFilter\")) {\r\n        starredButton.style.backgroundColor = \"#2980b9\";\r\n      } else {\r\n        starredButton.style.backgroundColor = \"\";\r\n      }\r\n    });\r\n    function handlePriorityButtonClick(priority, button) {\r\n      const filter = tasks.filter(\r\n        (task) => task.priority.toLowerCase() === priority.toLowerCase()\r\n      );\r\n\r\n      if (\r\n        !isFilterActive(\"low\") &&\r\n        !isFilterActive(\"med\") &&\r\n        !isFilterActive(\"high\")\r\n      ) {\r\n        button.style.opacity = 1;\r\n        introduceFilter(priority, filter);\r\n      } else if (isFilterActive(priority)) {\r\n        button.style.opacity = 0.5;\r\n        introduceFilter(priority, filter);\r\n      }\r\n\r\n      console.log(filters);\r\n    }\r\n    lowprioButton.addEventListener(\"click\", () =>\r\n      handlePriorityButtonClick(\"low\", lowprioButton)\r\n    );\r\n    medprioButton.addEventListener(\"click\", () =>\r\n      handlePriorityButtonClick(\"med\", medprioButton)\r\n    );\r\n    highprioButton.addEventListener(\"click\", () =>\r\n      handlePriorityButtonClick(\"high\", highprioButton)\r\n    );\r\n    finishedButton.addEventListener(\"click\", () => {\r\n      const finishedFilter = tasks.filter((task) => task.done === true);\r\n      introduceFilter(\"finishedFilter\", finishedFilter);\r\n      if (isFilterActive(\"finishedFilter\")) {\r\n        finishedButton.style.backgroundColor = \"#2980b9\";\r\n      } else {\r\n        finishedButton.style.backgroundColor = \"\";\r\n      }\r\n    });\r\n    let count = 0;\r\n    projectButtons.forEach((button) => {\r\n      button.addEventListener(\"click\", () => {\r\n        console.log(projectButtons);\r\n        const projectName = button.textContent.toLowerCase();\r\n        if (isFilterActive(projectName)) {\r\n          count -= 1;\r\n          button.style.backgroundColor = \"\";\r\n          console.log(\"unpress\");\r\n          const projectFilter = tasks.filter(\r\n            (task) => task.project.toLowerCase() === projectName\r\n          );\r\n\r\n          introduceFilter(projectName, projectFilter);\r\n          console.log(filters);\r\n          console.log(projectFilter);\r\n        } else if (count === 0) {\r\n          count += 1;\r\n          button.style.backgroundColor = \"#2980b9\";\r\n          console.log(\"press\");\r\n          const projectFilter = tasks.filter(\r\n            (task) => task.project.toLowerCase() === projectName\r\n          );\r\n\r\n          introduceFilter(projectName, projectFilter);\r\n          console.log(filters);\r\n          console.log(projectFilter);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  function updateCreateReturnButtons(editMode, tasks, index) {\r\n    const {\r\n      createButton,\r\n      returnButton,\r\n      titleInput,\r\n      descriptionInput,\r\n      dateInput,\r\n      projectInput,\r\n      priorityInput,\r\n    } = myDOM.displayAddTask(editMode, tasks, index);\r\n    createButton.addEventListener(\"click\", () => {\r\n      if (verifyForm(titleInput.value, dateInput.value)) {\r\n        if (!editMode) {\r\n          const newTask = new Task(\r\n            titleInput.value,\r\n            descriptionInput.value,\r\n            dateInput.value,\r\n            priorityInput.value,\r\n            projectInput.value,\r\n            false,\r\n            false\r\n          );\r\n          tasks.push(newTask);\r\n        } else {\r\n          tasks[index].title = titleInput.value;\r\n          tasks[index].description = descriptionInput.value;\r\n          tasks[index].dueDate = dateInput.value;\r\n          tasks[index].project = projectInput.value;\r\n          tasks[index].priority = priorityInput.value;\r\n        }\r\n\r\n        ({\r\n          addTaskButton,\r\n          todayButton,\r\n          starredButton,\r\n          weekButton,\r\n          lowprioButton,\r\n          medprioButton,\r\n          highprioButton,\r\n          finishedButton,\r\n          selectionOrder,\r\n        } = myDOM.displayHome());\r\n\r\n        console.log(tasks);\r\n        updateProjectButtons();\r\n        updateTaskButtons();\r\n        updateListeners();\r\n      }\r\n    });\r\n    returnButton.addEventListener(\"click\", () => {\r\n      myDOM.removeAddTask();\r\n    });\r\n  }\r\n\r\n  function updateTaskButtons() {\r\n    saveTasks(tasks);\r\n    let filteredTasks = filters.reduce((result, currentFilter) => {\r\n      return result.filter((task) => currentFilter.filter.includes(task));\r\n    }, tasks);\r\n    //sort tasks by date\r\n    filteredTasks = filteredTasks.sort((a, b) => {\r\n      const dateA = new Date(a.dueDate);\r\n      const dateB = new Date(b.dueDate);\r\n      if (sortBy === \"asc\") {\r\n        return dateB - dateA;\r\n      } else {\r\n        return dateA - dateB;\r\n      }\r\n    });\r\n    console.log(\"tasks\", tasks);\r\n    const {\r\n      starButtons,\r\n      editButtons,\r\n      deleteButtons,\r\n      doneButtons,\r\n      moreinfoButtons,\r\n      moreinfoDivs,\r\n    } = myDOM.displayTasks(filteredTasks);\r\n\r\n    starButtons.forEach((button, index) => {\r\n      button.addEventListener(\"click\", () => {\r\n        const starValue = !tasks[index].star;\r\n        tasks[index].star = starValue;\r\n        console.log(starValue);\r\n        updateTaskButtons();\r\n      });\r\n    });\r\n    deleteButtons.forEach((button, index) => {\r\n      button.addEventListener(\"click\", () => {\r\n        console.log(index);\r\n        tasks.splice(index, 1);\r\n\r\n        updateProjectButtons();\r\n        updateTaskButtons();\r\n      });\r\n    });\r\n    editButtons.forEach((button, index) => {\r\n      button.addEventListener(\"click\", () => {\r\n        updateCreateReturnButtons(true, tasks, index);\r\n      });\r\n    });\r\n    doneButtons.forEach((button, index) => {\r\n      button.addEventListener(\"click\", () => {\r\n        const doneValue = !tasks[index].done;\r\n        tasks[index].done = doneValue;\r\n        console.log(doneValue);\r\n        updateTaskButtons();\r\n      });\r\n    });\r\n    moreinfoButtons.forEach((button, index) => {\r\n      button.addEventListener(\"click\", () => {\r\n        const moreinfoDiv = moreinfoDivs[index];\r\n        moreinfoDiv.style.display =\r\n          moreinfoDiv.style.display === \"flex\" ? \"none\" : \"flex\";\r\n        button.style.transform =\r\n          button.style.transform === \"rotate(90deg)\" ? \"\" : \"rotate(90deg)\";\r\n      });\r\n    });\r\n  }\r\n  updateTaskButtons();\r\n  updateListeners();\r\n})();\r\n\r\nconst verifyForm = (title, date) => {\r\n  const isValidDate = (dateString) => {\r\n    console.log(dateString);\r\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n    return regex.test(dateString);\r\n  };\r\n  if (title.length < 3) {\r\n    window.alert(\"title is too short\");\r\n    return false;\r\n  } else if (!isValidDate(date)) {\r\n    console.log(date);\r\n    window.alert(\"invalid date\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\n\n//# sourceURL=webpack://todolist/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;